// <auto-generated />
using System;
using E_BangAzureWorker.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_BangAzureWorker.Migrations
{
    [DbContext(typeof(ServiceDbContext))]
    [Migration("20250513182359_INIT")]
    partial class INIT
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_BangAzureWorker.Model.BlobContainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlobRootPathID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RootFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlobRootPathID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("E_BangAzureWorker.Model.BlobContainerRoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RootPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RootPath")
                        .IsUnique();

                    b.ToTable("ContainerRoot");
                });

            modelBuilder.Entity("E_BangAzureWorker.Model.BlobItems", b =>
                {
                    b.Property<int>("BlobItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlobItemId"));

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlobItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlobItemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContainerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlobItemId");

                    b.HasIndex("BlobItemId")
                        .IsUnique();

                    b.HasIndex("ContainerID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("E_BangAzureWorker.Model.BlobContainer", b =>
                {
                    b.HasOne("E_BangAzureWorker.Model.BlobContainerRoot", "BlobContainerRoot")
                        .WithMany("BlobContainers")
                        .HasForeignKey("BlobRootPathID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BlobContainerRoot");
                });

            modelBuilder.Entity("E_BangAzureWorker.Model.BlobItems", b =>
                {
                    b.HasOne("E_BangAzureWorker.Model.BlobContainer", "Container")
                        .WithMany("Items")
                        .HasForeignKey("ContainerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Container");
                });

            modelBuilder.Entity("E_BangAzureWorker.Model.BlobContainer", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("E_BangAzureWorker.Model.BlobContainerRoot", b =>
                {
                    b.Navigation("BlobContainers");
                });
#pragma warning restore 612, 618
        }
    }
}
